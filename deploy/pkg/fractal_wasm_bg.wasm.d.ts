/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_chaoticmapresult_free: (a: number, b: number) => void;
export const chaoticmapresult_points: (a: number) => [number, number];
export const chaoticmapresult_x_params: (a: number) => [number, number];
export const chaoticmapresult_y_params: (a: number) => [number, number];
export const chaoticmapresult_max_lyapunov: (a: number) => number;
export const chaoticmapresult_min_lyapunov: (a: number) => number;
export const chaoticmapresult_fractal_dimension: (a: number) => number;
export const chaoticmapresult_is_cubic: (a: number) => number;
export const __wbg_rule_free: (a: number, b: number) => void;
export const rule_new: (a: number, b: number, c: number) => number;
export const rule_add: (a: number, b: number) => void;
export const rule_check: (a: number, b: number, c: number) => number;
export const __wbg_fractalgenerator_free: (a: number, b: number) => void;
export const fractalgenerator_new: () => number;
export const fractalgenerator_chaos_game: (a: number, b: any, c: number, d: number, e: number, f: any, g: number) => [number, number];
export const fractalgenerator_ifs_fractal: (a: number, b: number, c: number, d: number, e: any, f: any, g: number, h: number) => [number, number];
export const fractalgenerator_mandelbrot_set: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const fractalgenerator_julia_set: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number];
export const fractalgenerator_burning_ship: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number];
export const fractalgenerator_iterations_to_rgba: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number];
export const fractalgenerator_points_to_rgba: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const __wbg_fractalpresets_free: (a: number, b: number) => void;
export const fractalpresets_sierpinski_triangle: () => any;
export const fractalpresets_sierpinski_triangle_transforms: () => any;
export const fractalpresets_sierpinski_carpet: () => any;
export const fractalpresets_sierpinski_carpet_transforms: () => any;
export const fractalpresets_vicsek_square: () => any;
export const fractalpresets_t_square: () => any;
export const fractalpresets_web_pattern_transforms: () => any;
export const fractalpresets_dragon_curve: () => any;
export const fractalpresets_dragon_curve_probs: () => any;
export const fractalpresets_barnsley_fern: () => any;
export const fractalpresets_barnsley_fern_probs: () => any;
export const fractalpresets_mandelbrot_like: () => any;
export const fractalpresets_mandelbrot_like_probs: () => any;
export const fractalpresets_spiral: () => any;
export const fractalpresets_spiral_probs: () => any;
export const fractalpresets_christmas_tree: () => any;
export const fractalpresets_christmas_tree_probs: () => any;
export const fractalpresets_maple_leaf: () => any;
export const fractalpresets_maple_leaf_probs: () => any;
export const fractalgenerator_find_random_chaos_extended: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const fractalgenerator_find_random_chaos: (a: number, b: number, c: number, d: number) => [number, number];
export const fractalgenerator_generate_chaotic_map_points: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number];
export const fractalpresets_vicsek_square_transforms: () => any;
export const fractalpresets_t_square_transforms: () => any;
export const fractalpresets_techs_pattern_transforms: () => any;
export const fractalpresets_techs_pattern: () => any;
export const fractalpresets_web_pattern: () => any;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_start: () => void;
